{"version":3,"sources":["scripts/app-c4c04a4300.js"],"names":["angular","module","TrackerParametersService","getParameters","vm","parameters","setParameters","params","forEach","val","key","isDefined","updateYearKeys","yearValues","availableYears","values","idxYearFrom","from","idxYearTo","to","startKey","endKey","this","terms","maxTerms","maxRelatedTerms","minDist","wordBoost","forwards","sumDistances","algorithm","aggWeighFunction","aggWFParam","aggYearsInInterval","aggWordsPerYear","options","floor","ceil","step","onChange","service","trackerParameters","directive","scope","templateUrl","controllerAs","controller","TrackerParametersController","algorithms","weighFuncs","years","$inject","trackerGraphs","TrackerGraphsController","GraphControlService","downloadData","rawData","getRawData","stream","allWords","Set","allYears","wordValues","year","push","weight","word","add","headers","concat","csvData","row","streamGraph","forceGraph","slider_options","parameterIO","ParameterIOController","hide","readOnly","text","JSON","stringify","btnText","closeParamIO","parse","GraphConfigService","update","data","yearIdx","idx","setVocabulary","setStreamYears","yearLabels","streamData","formatForStream","forceData","formatForForce","networks","length","network","getConfig","currYearIdx","showTicksValues","translate","value","vocab","wordColourIdx","getColour","item","name","cIdx","colours","getX","point","getY","tickY","tickVal","parseFloat","toFixed","tickYear","yearTickLabels","labels","processNode","node","addTextLabels","setSize","setOutline","forceGraphHooks","hook","append","attr","d","style","type","select","pickStroke","nodeType","feature","width","colour","addForceGraphHook","callback","graphName","streamConfig","forceConfig","chart","height","margin","top","right","bottom","left","x","y","xAxis","tickFormat","yAxis","color","customSymbol","d3","svg","symbol","size","Math","log2","count","nodeExtras","curveLinks","useArrows","scale","category20","FormController","ConceptService","doPost","resp","trackConcept","trackerPromise","then","SettingsService","$resource","doLoad","configFile","get","$promise","config","baseURL","trackerURL","avlYearSvcURL","avlYearResource","first","last","$log","trackerParams","tracker","request","trackPromise","parseTermTrack","toJSON","runBlock","debug","run","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,SACN,aACA,YACA,eACA,SACA,OACA,WACA,SACA,aACA,aAIN,WACE,YAMA,SAASC,KAuCP,QAASC,KACP,MAAOC,GAAGC,WAGZ,QAASC,GAAcC,GAErBP,QAAQQ,QAAQJ,EAAGC,WAAY,SAASI,EAAIC,GACvCV,QAAQW,UAAUJ,EAAOG,MAC1BN,EAAGC,WAAWK,GAAOH,EAAOG,MAKlC,QAASE,KAIP,GAAIC,GAAaT,EAAGU,eAAeC,OAC/BC,EAAcZ,EAAGU,eAAeG,KAChCC,EAAYd,EAAGU,eAAeK,EAElCf,GAAGC,WAAWe,SAAWP,EAAWG,GACpCZ,EAAGC,WAAWgB,OAAWR,EAAWK,GA5DtC,GAAId,GAAKkB,IAETlB,GAAGC,YACDkB,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBL,SAAU,GACVC,OAAQ,GACRK,QAAS,GACTC,UAAW,EACXC,UAAU,EACVC,cAAc,EACdC,UAAW,WAEXC,iBAAkB,WAClBC,WAAY,EACZC,mBAAoB,EACpBC,gBAAiB,GAGnB9B,EAAGU,gBACDG,KAAM,EAAGE,GAAI,EACbJ,UACAoB,SACEC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,SAAU3B,GAId,IAAI4B,IACFrC,cAAeA,EACfG,cAAeA,EACfQ,eAAgBV,EAAGU,eAErB,OAAO0B,GAzCTxC,QACGC,OAAO,SACPuC,QAAQ,2BAA4BtC,MAoEzC,WACE,YAMA,SAASuC,KACL,GAAIC,IACAC,SACAC,YAAa,wDACbC,aAAc,KACdC,WAAY,8BAEhB,OAAOJ,GAXX1C,QACGC,OAAO,SACPyC,UAAU,oBAAqBD,MAapC,WACE,YAMA,SAASM,GAA4B7C,GACnC,GAAIE,GAAKkB,IACTlB,GAAG4C,YAAc,WAAY,gBAC7B5C,EAAG6C,YAAc,WAAY,SAAU,OAEvC7C,EAAG8C,MAAQhD,EAAyBY,eAGpCV,EAAGC,WAAaH,EAAyBC,gBAZ3CH,QACGC,OAAO,SACP6C,WAAW,8BAA+BC,GAY7CA,EAA4BI,SAAW,+BAEzC,WACE,YAMA,SAASC,KACP,GAAIV,IACFC,SACAC,YAAa,oDACbC,aAAc,KACdC,WAAY,0BAEd,OAAOJ,GAXT1C,QACGC,OAAO,SACPyC,UAAU,gBAAiBU,MAahC,WACE,YAMA,SAASC,GAAwBC,GAU/B,QAASC,KACP,GAAIC,GAAUF,EAAoBG,aAAaC,OAG3CC,EAAW,GAAIC,KACfC,IACJ7D,SAAQQ,QAAQgD,EAAS,SAASM,EAAYC,GAC5CF,EAASG,KAAKD,GACd/D,QAAQQ,QAAQsD,EAAY,SAASG,EAAQC,GAC3CP,EAASQ,IAAID,MAKjB,IAAIE,IAAY,IAAKC,OAAOR,GACxBS,GAAYF,EAUhB,OATApE,SAAQQ,QAAQmD,EAAU,SAASO,GACjC,GAAIK,IAAQL,EACZlE,SAAQQ,QAAQqD,EAAU,SAASE,GACjC,GAAItD,GAAOyD,IAAQV,GAAQO,GAASP,EAAQO,GAAMG,GAAQ,CAC1D5C,MAAK0C,KAAKvD,IACT8D,GACHjD,KAAK0C,KAAKO,IACTD,GAEIA,EAlCT,GAAIlE,GAAKkB,IAITlB,GAAGoE,YAAclB,EAAoBkB,YACrCpE,EAAGqE,WAAanB,EAAoBmB,WACpCrE,EAAGsE,eAAiBpB,EAAoBoB,eACxCtE,EAAGmD,aAAeA,EAZpBvD,QACGC,OAAO,SACP6C,WAAW,0BAA2BO,GAyCzCA,EAAwBF,SAAW,0BACrC,WACE,gBAQF,WACE,YAMA,SAASwB,KACL,GAAIjC,IACAC,SACAC,YAAa,kDACbC,aAAc,KACdC,WAAY,wBAEhB,OAAOJ,GAXX1C,QACGC,OAAO,SACPyC,UAAU,cAAeiC,MAa9B,WACE,YAMA,SAASC,GAAsB1E,GAU7B,QAASC,KACPC,EAAGyE,MAAO,EACVzE,EAAG0E,UAAW,EACd1E,EAAG2E,KAAOC,KAAKC,UAAU/E,EAAyBC,iBAClDC,EAAG8E,QAAU,KAGf,QAAS5E,KACPF,EAAGyE,MAAO,EACVzE,EAAG0E,UAAW,EACd1E,EAAG2E,KAAO,GACV3E,EAAG8E,QAAU,OAGf,QAASC,KAEP,GADA/E,EAAGyE,MAAO,GACNzE,EAAG0E,SAAU,CACf,GAAIvE,GAASyE,KAAKI,MAAMhF,EAAG2E,KAC3B7E,GAAyBI,cAAcC,IA3B3C,GAAIH,GAAKkB,IACTlB,GAAGD,cAAgBA,EACnBC,EAAGE,cAAgBA,EACnBF,EAAG+E,aAAeA,EAElB/E,EAAG2E,KAAO,GACV3E,EAAG0E,UAAW,EACd1E,EAAGyE,MAAO,EAZZ7E,QACGC,OAAO,SACP6C,WAAW,wBAAyB8B,GAoCvCA,EAAsBzB,SAAW,+BAAnC,WACE,YAMA,SAASG,GAAoB+B,GAkC3B,QAASC,GAAOC,GACdnF,EAAGoD,QAAU+B,CAGb,IAAI1B,MACAF,EAAW,GAAIC,IACnB5D,SAAQQ,QAAQ+E,EAAK7B,OAAQ,SAASI,EAAYC,GAChDF,EAASG,KAAKD,GACd/D,QAAQQ,QAAQsD,EAAY,SAASG,EAAQC,GAC3CP,EAASQ,IAAID,MAKjB,IAAIsB,KACJxF,SAAQQ,QAAQqD,EAAU,SAASE,EAAM0B,GACvCD,EAAQzB,GAAQ0B,IAIlBJ,EAAmBK,cAAc/B,GACjC0B,EAAmBM,eAAe9B,GAClCzD,EAAGwF,WAAa/B,CAGhB,IAAIgC,GAAaC,EAAgBP,EAAK7B,OAAQ8B,EAAS7B,EAAUE,GAC7DkC,EAAaC,EAAeT,EAAKU,SAAUT,EAG/CpF,GAAGoE,YAAYe,KAAOM,EACtBzF,EAAGqE,WAAWc,KAAOQ,EAErB3F,EAAGsE,eAAerC,KAAOjC,EAAGwF,WAAWM,OAAO,EAGhD,QAASzC,KACP,MAAOrD,GAAGoD,QAGZ,QAASsC,GAAgBP,EAAMC,EAAS7B,EAAUE,GAChD,GAAIgC,KAYJ,OAXA7F,SAAQQ,QAAQmD,EAAU,SAASO,GACjC,GAAInD,KACJf,SAAQQ,QAAQqD,EAAU,SAASE,GACjC,GAAItD,GAAOyD,IAAQqB,GAAKxB,GAASwB,EAAKxB,GAAMG,GAAQ,CACpD5C,MAAK0C,MAAOwB,EAAQzB,GAAOtD,KAC1BM,GACHO,KAAK0C,MACHtD,IAAKwD,EACLnD,OAAQA,KAET8E,GACIA,EAGT,QAASG,GAAeT,EAAMC,GAC5B,GAAIO,KAMJ,OAJA/F,SAAQQ,QAAQ+E,EAAM,SAASY,EAASpC,GACtCgC,EAAUP,EAAQzB,IAASoC,IAGtBJ,EA/FT,GAAI3F,GAAKkB,IAETlB,GAAGoE,aACDrC,QAASkD,EAAmBe,UAAU,eACtCb,SAGFnF,EAAGqE,YACDtC,QAASkD,EAAmBe,UAAU,cACtCb,QACAc,YAAa,GAGfjG,EAAGwF,cACHxF,EAAGsE,gBACDtC,MAAO,EACPC,KAAM,EACNiE,iBAAiB,EACjBC,UAAW,SAASC,GAClB,MAAOpG,GAAGwF,WAAWY,IAIzB,IAAIhE,IACF8C,OAAQA,EACR7B,WAAYA,EACZe,YAAapE,EAAGoE,YAChBC,WAAarE,EAAGqE,WAChBC,eAAgBtE,EAAGsE,eAErB,OAAOlC,GAnCTxC,QACKC,OAAO,SACPuC,QAAQ,sBAAuBc,GAwGpCA,EAAoBH,SAAW,yBADjC,WACE,YAMA,SAASkC,KAsDP,QAASK,GAAce,GACrB,GAAIhB,GAAM,CAGVzF,SAAQQ,QAAQiG,EAAO,SAASvC,GAC9BwC,EAAcxC,GAAQuB,EACtBA,GAAO,IAIX,QAASkB,GAAUC,GACjB,GAAI1C,GAAO0C,EAAKlG,KAAOkG,EAAKC,KACxBC,EAAOJ,EAAcxC,EACzB,OAAO4C,GAAOC,EAAQD,GAAQ,UAIhC,QAASE,GAAKC,GAAQ,MAAOA,GAAM,GACnC,QAASC,GAAKD,GAAQ,MAAOA,GAAM,GACnC,QAASE,GAAMC,GAAW,MAAOC,YAAWD,GAASE,QAAQ,GAE7D,QAASC,GAAS9B,GAChB,MAAGA,KAAO+B,GAAyBA,EAAe/B,GACpCA,EAEhB,QAASE,GAAe8B,GACtBD,EAAiBC,EAInB,QAASC,GAAYC,GAEnBC,EAAcD,GACdE,EAAQF,GACRG,EAAWH,GACX3H,QAAQQ,QAAQuH,EAAiB,SAASC,GACxCA,EAAKL,KAIT,QAASC,GAAcD,GACrBA,EAAKM,OAAO,QACTC,KAAK,KAAM,IACXA,KAAK,KAAM,SACXnD,KAAK,SAASoD,GAAK,MAAOA,GAAEtB,OAC5BuB,MAAM,cAAe,SAASD,GAAK,MAAe,QAARA,EAAEE,KAAa,OAAO,KAGrE,QAASR,GAAQF,GACfA,EAAKW,OAAO,UACTJ,KAAK,IAAK,SAASC,GAAK,MAAO,GAAI,EAAKA,EAAE,QAG/C,QAASL,GAAWH,GAClBA,EAAKW,OAAO,UACTJ,KAAK,SAAU,SAASC,GAAK,MAAOI,GAAWJ,EAAEE,KAAM,YACvDH,KAAK,eAAgB,SAASC,GAAK,MAAOI,GAAWJ,EAAEE,KAAM,WAGlE,QAASE,GAAWC,EAAUC,GAC5B,GAAIC,GAAQ,GACRC,EAAS,EAWb,OAVe,QAAZH,GACDE,EAAQ,EACRC,EAAS,OACW,QAAZH,GACRE,EAAQ,EACRC,EAAS,UAETD,EAAQ,EACRC,EAAS,QAEM,SAATF,EAAmBC,EAAQC,EAGrC,QAASC,GAAkBC,GACzBd,EAAgB/D,KAAK6E,GAGvB,QAASzC,GAAU0C,GACjB,MAAiB,gBAAdA,EACMC,EACe,eAAdD,EACDE,EADF,OAtIT,GAAID,IACFE,OACIZ,KAAM,mBACNa,OAAQ,IACRC,QACIC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEVC,EAAGxC,EACHyC,EAAGvC,EACHwC,OACEC,WAAYpC,GAEdqC,OACED,WAAYxC,GAEd0C,MAAOlD,IAGTmD,EAAeC,GAAGC,IAAIC,SACb5B,KAAM,SAASF,GAAK,MAAe,QAARA,EAAEE,KAAa,cAAc,WACxD6B,KAAM,SAAS/B,GAAK,MAAO,IAAKgC,KAAKC,KAAK,EAAIjC,EAAEkC,SAEzDrB,GACFC,OACIZ,KAAM,qBACNa,OAAQ,IACRR,MAAO,IACPmB,MAAOlD,EACPsD,OAAQH,EACRQ,WAAY5C,EACZ6C,YAAa,EACbC,WAAW,IAGbzD,EAAUgD,GAAGU,MAAMC,aAEnBlD,KACAO,KACArB,KAEAlE,GACF4D,UAAWA,EACXT,eAAgBA,EAChBiD,kBAAmBA,EACnBlD,cAAeA,EAEjB,OAAOlD,GAvDTxC,QACKC,OAAO,SACPuC,QAAQ,qBAAsB6C,MAiJrC,WACE,YAMA,SAASsF,GAAeC,EACA1K,EACAoD,GAKtB,QAASuH,KACP,GAAItK,GAASL,EAAyBC,gBAClC2K,EAAOF,EAAeG,aAAaxK,EACvCe,MAAK0J,eAAiBF,EACtBA,EAAKG,KAAK3H,EAAoBgC,QARhC,GAAIlF,GAAKkB,IAETlB,GAAGyK,OAASA,EATd7K,QACKC,OAAO,SACP6C,WAAW,iBAAkB6H,GAoBlCA,EAAexH,SAAW,iBAAkB,2BAA4B,0BAF1E,WACE,YAMA,SAAS+H,GAAgBC,EAAWjL,GAMlC,QAASkL,KACP,GAAIC,GAAaF,EAAU,cAC3BE,GAAWC,MAAMC,SAASN,KAAK,SAASO,GACtC,GAAIC,GAAUD,EAAOC,QACjBC,EAAaD,EAAU,gBACvBE,EAAgBF,EAAU,kBAEX,IAAhBA,EAAQvF,SACTwF,EAAa,cACbC,EAAgB,yCAIlBnJ,EAAQkJ,WAAaA,CAGrB,IAAIE,GAAkBT,EAAUQ,EAChCC,GAAgBN,MAAMC,SAASN,KAAK,SAAS/H,GAC3ChD,EAAyBY,eAAeG,KAAOiC,EAAM2I,MACrD3L,EAAyBY,eAAeK,GAAK+B,EAAM4I,KACnD5L,EAAyBY,eAAeC,OAASmC,EAAMnC,OACvDb,EAAyBY,eAAeqB,QAAQC,MAAQc,EAAM2I,MAC9D3L,EAAyBY,eAAeqB,QAAQE,KAAOa,EAAM4I,SA3BnE,GAAItJ,IACF4I,OAAQA,EAEV,OAAO5I,GARTxC,QACKC,OAAO,SACPuC,QAAQ,kBAAmB0I,GAwChCA,EAAgB/H,SAAW,YAAa,+BAH1C,WACE,YAMA,SAASyH,GAAeO,EAAWY,EAAMb,GAMvC,QAASH,GAAaiB,GAEpB,GAAIC,GAAUd,EAAUD,EAAgBQ,YACpCQ,EAAUD,EAAQX,IAAIU,GACtBG,EAAeD,EAAQX,SAASN,KAAKmB,EACzC,OAAOD,GAGT,QAASC,GAAe7G,GAEtB,MAAOA,GAAK8G,SAfd,GAAI7J,IACFuI,aAAcA,EAEhB,OAAOvI,GARTxC,QACKC,OAAO,SACPuC,QAAQ,iBAAkBoI,GA2B/BA,EAAezH,SAAW,YAAa,OAAQ,sBAJjD,WACE,YAOA,SAASmJ,GAASP,EAAMb,GACtBa,EAAKQ,MAAM,gBACXrB,EAAgBE,SAPlBpL,QACGC,OAAO,SACPuM,IAAIF,GAcPA,EAASnJ,SAAW,OAAQ,sBAJ9B,WACE,YAEAnD,SACGC,OAAO,YAGZ,WACE,YAOA,SAASuL,GAAOiB,EAAcC,GAE5BD,EAAaE,cAAa,GAG1BD,EAAaE,WAAY,EACzBF,EAAaG,QAAU,IACvBH,EAAaI,cAAgB,kBAC7BJ,EAAaK,mBAAoB,EACjCL,EAAaM,aAAc,EAd7BhN,QACGC,OAAO,SACPuL,OAAOA,GAsBVA,EAAOrI,SAAW,eAAgB,mBANpCnD,QAAQC,OAAO,SAASuM,KAAK,iBAAkB,SAASS,GAAiBA,EAAeC,IAAI,iDAAiD,0hBAC7ID,EAAeC,IAAI,mDAAmD,soBACtED,EAAeC,IAAI,uDAAuD","file":"scripts/app-c4c04a4300.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('shico', [\n      'ngResource',\n      'ngAnimate',\n      'ui.bootstrap',\n      'toastr',\n      'nvd3',\n      'rzModule',\n      'cgBusy',\n      'ngSanitize',\n      'ngCsv'\n    ]);\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .service('TrackerParametersService', TrackerParametersService);\n\n  function TrackerParametersService() {\n    var vm = this;\n\n    vm.parameters = {\n      terms: '',\n      maxTerms: 10,\n      maxRelatedTerms: 10,\n      startKey: '',\n      endKey: '',\n      minDist: 0.1,\n      wordBoost: 1.0,\n      forwards: true,\n      sumDistances: false,\n      algorithm: 'adaptive',   //  'adaptive' or 'non-adaptive'\n      // Aggregator parameters:\n      aggWeighFunction: 'Gaussian',\n      aggWFParam: 1,\n      aggYearsInInterval: 1,\n      aggWordsPerYear: 5\n    };\n\n    vm.availableYears = {\n      from: 0, to: 1,\n      values: {},\n      options: {\n        floor: 0,\n        ceil: 1,\n        step: 1,\n        onChange: updateYearKeys\n      }\n    };\n\n    var service = {\n      getParameters: getParameters,\n      setParameters: setParameters,\n      availableYears: vm.availableYears\n    };\n    return service;\n\n    function getParameters() {\n      return vm.parameters;\n    }\n\n    function setParameters(params) {\n      // Copy parameters from `params` which already exist in `vm.parameters`\n      angular.forEach(vm.parameters, function(val,key) {\n        if(angular.isDefined(params[key])) {\n          vm.parameters[key] = params[key]\n        }\n      });\n    }\n\n    function updateYearKeys() {\n      // Copy values from slider to startKey and endKey\n      // Slider contains only year (e.g. 1954), while startKey and endKey\n      // require the name of the corresponding w2v model (e.g. 1950_1959)\n      var yearValues = vm.availableYears.values;\n      var idxYearFrom = vm.availableYears.from;\n      var idxYearTo = vm.availableYears.to;\n\n      vm.parameters.startKey = yearValues[idxYearFrom];\n      vm.parameters.endKey   = yearValues[idxYearTo];\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .directive('trackerParameters', trackerParameters);\n\n  function trackerParameters() {\n      var directive = {\n          scope: {},    // Directive has it's own personal scope\n          templateUrl: '/app/components/shico/trackerParameters.template.html',\n          controllerAs: 'vm',\n          controller: 'TrackerParametersController'\n      };\n      return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .controller('TrackerParametersController', TrackerParametersController);\n\n  function TrackerParametersController(TrackerParametersService) {\n    var vm = this;\n    vm.algorithms = ['adaptive', 'non-adaptive'];\n    vm.weighFuncs = ['Gaussian', 'Linear', 'JSD'];\n    // Years not defined  here because it gets loaded by service\n    vm.years = TrackerParametersService.availableYears;\n\n    // We use the parameters variable from ParameterService directly.\n    vm.parameters = TrackerParametersService.getParameters();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .directive('trackerGraphs', trackerGraphs);\n\n  function trackerGraphs() {\n    var directive = {\n      scope: {},    // Directive has it's own personal scope\n      templateUrl: '/app/components/shico/trackerGraphs.template.html',\n      controllerAs: 'vm',\n      controller: 'TrackerGraphsController'\n    };\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .controller('TrackerGraphsController', TrackerGraphsController);\n\n  function TrackerGraphsController(GraphControlService) {\n    var vm = this;\n\n    // Share graph data from service to controller\n    // so directive can find them.\n    vm.streamGraph = GraphControlService.streamGraph;\n    vm.forceGraph = GraphControlService.forceGraph;\n    vm.slider_options = GraphControlService.slider_options;\n    vm.downloadData = downloadData;\n\n    function downloadData() {\n      var rawData = GraphControlService.getRawData().stream;\n\n      // allWords and allYears we already had -- we shouldn't need to build them again\n      var allWords = new Set();\n      var allYears = [];\n      angular.forEach(rawData, function(wordValues, year) {\n        allYears.push(year);\n        angular.forEach(wordValues, function(weight, word) {\n          allWords.add(word);\n        });\n      });\n\n      // Create CSV file\n      var headers = [ '' ].concat(allYears);\n      var csvData = [ headers ];\n      angular.forEach(allWords, function(word) {\n        var row = [ word ];\n        angular.forEach(allYears, function(year) {\n          var val = (word in rawData[year]) ? rawData[year][word] : 0;\n          this.push(val);\n        }, row);\n        this.push(row);\n      }, csvData);\n\n      return csvData;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n//  console.log('Running temp code...');\n\n//  var shico = angular\n//      .module('shico');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .directive('parameterIo', parameterIO);\n\n  function parameterIO() {\n      var directive = {\n          scope: {},    // Directive has it's own personal scope\n          templateUrl: '/app/components/shico/parameterIO.template.html',\n          controllerAs: 'vm',\n          controller: 'ParameterIOController'\n      };\n      return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .controller('ParameterIOController', ParameterIOController);\n\n  function ParameterIOController(TrackerParametersService) {\n    var vm = this;\n    vm.getParameters = getParameters;\n    vm.setParameters = setParameters;\n    vm.closeParamIO = closeParamIO;\n\n    vm.text = '';\n    vm.readOnly = false;\n    vm.hide = true;\n\n    function getParameters () {\n      vm.hide = false;\n      vm.readOnly = true;\n      vm.text = JSON.stringify(TrackerParametersService.getParameters());\n      vm.btnText = 'Ok';\n    }\n\n    function setParameters () {\n      vm.hide = false;\n      vm.readOnly = false;\n      vm.text = '';\n      vm.btnText = 'Load';\n    }\n\n    function closeParamIO() {\n      vm.hide = true;\n      if(!vm.readOnly) {\n        var params = JSON.parse(vm.text);\n        TrackerParametersService.setParameters(params);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .service('GraphControlService', GraphControlService);\n\n  function GraphControlService(GraphConfigService) {\n    var vm = this;\n\n    vm.streamGraph = {\n      options: GraphConfigService.getConfig('streamGraph'),\n      data:    []\n    };\n\n    vm.forceGraph = {\n      options: GraphConfigService.getConfig('forceGraph'),\n      data: [],\n      currYearIdx: 0\n    };\n\n    vm.yearLabels = [];\n    vm.slider_options = {\n      floor: 0,\n      ceil: 0,\n      showTicksValues: true,\n      translate: function(value) {\n        return vm.yearLabels[value];\n      }\n    };\n\n    var service = {\n      update: update,\n      getRawData: getRawData,\n      streamGraph: vm.streamGraph,\n      forceGraph:  vm.forceGraph,\n      slider_options: vm.slider_options\n    };\n    return service;\n\n    // Update graphs with the given data\n    function update(data) {\n      vm.rawData = data;\n\n      // Collect all words and year labels on data\n      var allYears = [];\n      var allWords = new Set();\n      angular.forEach(data.stream, function(wordValues, year) {\n        allYears.push(year);\n        angular.forEach(wordValues, function(weight, word) {\n          allWords.add(word);\n        });\n      });\n\n      // Create year idx -> label table\n      var yearIdx = {};\n      angular.forEach(allYears, function(year, idx) {\n        yearIdx[year] = idx;\n      });\n\n      // Register vocabulary and year labels with to be used by config\n      GraphConfigService.setVocabulary(allWords);\n      GraphConfigService.setStreamYears(allYears);\n      vm.yearLabels = allYears;\n\n      // Prepare data on format suitable from NVD3\n      var streamData = formatForStream(data.stream, yearIdx, allWords, allYears);\n      var forceData  = formatForForce(data.networks, yearIdx);\n\n      // Register data on graph\n      vm.streamGraph.data = streamData;\n      vm.forceGraph.data = forceData;\n\n      vm.slider_options.ceil = vm.yearLabels.length-1;\n    }\n\n    function getRawData() {\n      return vm.rawData;\n    }\n\n    function formatForStream(data, yearIdx, allWords, allYears) {\n      var streamData = [];\n      angular.forEach(allWords, function(word) {\n        var values = [];\n        angular.forEach(allYears, function(year) {\n          var val = (word in data[year]) ? data[year][word] : 0;\n          this.push([ yearIdx[year], val]);\n        }, values);\n        this.push({\n          key: word,\n          values: values\n        });\n      }, streamData);\n      return streamData;\n    }\n\n    function formatForForce(data, yearIdx) {\n      var forceData = {};\n\n      angular.forEach(data, function(network, year) {\n        forceData[yearIdx[year]] = network;\n      });\n\n      return forceData;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .service('GraphConfigService', GraphConfigService);\n\n  function GraphConfigService() {\n    // NVD3 configuration for stream graph\n    var streamConfig = {\n      chart: {\n          type: 'stackedAreaChart',\n          height: 400,\n          margin : {\n              top: 20,\n              right: 20,\n              bottom: 60,\n              left: 55\n          },\n          x: getX,\n          y: getY,\n          xAxis: {\n            tickFormat: tickYear\n          },\n          yAxis: {\n            tickFormat: tickY\n          },\n          color: getColour\n      }\n    };\n    var customSymbol = d3.svg.symbol()\n                .type( function(d) { return d.type==\"seed\"?\"triangle-up\":\"circle\"; } )\n                .size( function(d) { return 50 * Math.log2(2 + d.count); } );\n    // NVD3 configuration for force directed graph\n    var forceConfig = {\n      chart: {\n          type: 'forceDirectedGraph',\n          height: 300,\n          width: 300,\n          color: getColour,\n          symbol: customSymbol,\n          nodeExtras: processNode,\n          curveLinks:  true,\n          useArrows: true\n      }\n    };\n    var colours = d3.scale.category20();\n\n    var yearTickLabels = {};   // Year markers for stream graph\n    var forceGraphHooks = [];\n    var wordColourIdx = {};\n\n    var service = {\n      getConfig: getConfig,\n      setStreamYears: setStreamYears,\n      addForceGraphHook: addForceGraphHook,\n      setVocabulary: setVocabulary\n    };\n    return service;\n\n    // Helper functions for all graphs\n    function setVocabulary(vocab) {\n      var idx = 0;\n      // Each word of vocabulary is assigned an unique ID, later used to assign colour\n      // TODO: can't we get a list of words from server?\n      angular.forEach(vocab, function(word) {\n        wordColourIdx[word] = idx;\n        idx += 1;\n      });\n    }\n\n    function getColour(item) {\n      var word = item.key || item.name;\n      var cIdx = wordColourIdx[word];\n      return cIdx ? colours(cIdx) : '#223344';\n    }\n\n    // Helper functions for streamConfig\n    function getX(point){ return point[0]; }\n    function getY(point){ return point[1]; }\n    function tickY(tickVal) { return parseFloat(tickVal).toFixed(1); }\n\n    function tickYear(idx) {\n      if(idx in yearTickLabels) { return yearTickLabels[idx]; }\n      else { return idx; }\n    }\n    function setStreamYears(labels) {\n      yearTickLabels = labels;\n    }\n\n    // Helper functions for forceConfig\n    function processNode(node) {\n      // Nodes have: {'name': 'str', 'type': 'seed', 'count': N},\n      addTextLabels(node);  // {'count': 1, 'name': u'bevrijding', 'type': 'seed'},\n      setSize(node);\n      setOutline(node);\n      angular.forEach(forceGraphHooks, function(hook) {\n        hook(node);\n      });\n    }\n\n    function addTextLabels(node) {\n      node.append(\"text\")\n        .attr(\"dx\", 12)\n        .attr(\"dy\", \".35em\")\n        .text(function(d) { return d.name; })\n        .style(\"font-weight\", function(d) { return d.type==\"seed\"?\"bold\":\"\"; });\n    }\n\n    function setSize(node) {\n      node.select('circle')\n        .attr('r', function(d) { return 5 + 2 * (d.count); });\n    }\n\n    function setOutline(node) {\n      node.select('circle')\n        .attr('stroke', function(d) { return pickStroke(d.type, 'colour'); })\n        .attr('stroke-width', function(d) { return pickStroke(d.type, 'width'); });\n    }\n\n    function pickStroke(nodeType, feature) {\n      var width = '';\n      var colour = '';\n      if(nodeType == 'seed') {\n        width = 2;\n        colour = 'red';\n      } else if(nodeType == 'word') {\n        width = 0;\n        colour = 'black';\n      } else {  // nodeType == 'drop'\n        width = 2;\n        colour = 'gray';\n      }\n      return (feature=='width')? width : colour;\n    }\n\n    function addForceGraphHook(callback) {\n      forceGraphHooks.push(callback);\n    }\n\n    function getConfig(graphName) {\n      if(graphName === 'streamGraph') {\n        return streamConfig;\n      } else if(graphName === 'forceGraph'){\n        return forceConfig;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .controller('FormController', FormController);\n\n  function FormController(ConceptService,\n                          TrackerParametersService,\n                          GraphControlService) {\n    var vm = this;\n\n    vm.doPost = doPost;\n\n    function doPost() {\n      var params = TrackerParametersService.getParameters();\n      var resp = ConceptService.trackConcept(params);\n      this.trackerPromise = resp; // ng-busy watches on trackerPromise\n      resp.then(GraphControlService.update);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .service('SettingsService', SettingsService);\n\n  function SettingsService($resource, TrackerParametersService) {\n    var service = {\n      doLoad: doLoad\n    };\n    return service;\n\n    function doLoad() {\n      var configFile = $resource('config.json');\n      configFile.get().$promise.then(function(config) {\n        var baseURL = config.baseURL;\n        var trackerURL = baseURL + '/track/:terms';\n        var avlYearSvcURL = baseURL + '/available-years';\n\n        if(baseURL.length==0) {\n          trackerURL = 'dummy2.json';\n          avlYearSvcURL = 'http://localhost:5000/available-years';\n        }\n\n        // Copy config from JSON to the service\n        service.trackerURL = trackerURL;\n\n        // Call avlYearSvc resource to get years\n        var avlYearResource = $resource(avlYearSvcURL);\n        avlYearResource.get().$promise.then(function(years) {\n          TrackerParametersService.availableYears.from = years.first;\n          TrackerParametersService.availableYears.to = years.last;\n          TrackerParametersService.availableYears.values = years.values;\n          TrackerParametersService.availableYears.options.floor = years.first;\n          TrackerParametersService.availableYears.options.ceil = years.last;\n        });\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .service('ConceptService', ConceptService);\n\n  function ConceptService($resource, $log, SettingsService) {\n    var service = {\n      trackConcept: trackConcept\n    };\n    return service;\n\n    function trackConcept(trackerParams) {\n      // trackerURL format: http://localhost:5000/track/:terms\n      var tracker = $resource(SettingsService.trackerURL);\n      var request = tracker.get(trackerParams);\n      var trackPromise = request.$promise.then(parseTermTrack);\n      return trackPromise;\n    }\n\n    function parseTermTrack(data) {\n      // If data needs to be parsed, it should be done here.\n      return data.toJSON();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, SettingsService) {\n    $log.debug('runBlock end');\n    SettingsService.doLoad();\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n})();\n\nangular.module(\"shico\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/shico/parameterIO.template.html\",\"<div class=\\\"row\\\"><div class=\\\"col-md-2\\\"><button ng-click=\\\"vm.getParameters()\\\" class=\\\"btn btn-success\\\">Save parameters</button></div><div class=\\\"col-md-2\\\"><button ng-click=\\\"vm.setParameters()\\\" class=\\\"btn btn-success\\\">Load parameters</button></div></div><br><div class=\\\"row\\\" ng-hide=\\\"vm.hide\\\"><div class=\\\"col-md-8\\\"><textarea class=\\\"form-control\\\" rows=\\\"2\\\" ng-readonly=\\\"vm.readOnly\\\" ng-model=\\\"vm.text\\\"></textarea></div><div class=\\\"col-md-2\\\"><button ng-click=\\\"vm.closeParamIO()\\\" class=\\\"btn btn-success\\\">{{ vm.btnText }}</button></div></div>\");\n$templateCache.put(\"app/components/shico/trackerGraphs.template.html\",\"<div class=\\\"row\\\" ng-if=\\\"vm.forceGraph.data.length != 0\\\"><div class=\\\"row\\\"><div class=\\\"col-md-12\\\"><nvd3 data=\\\"vm.streamGraph.data\\\" options=\\\"vm.streamGraph.options\\\"></nvd3></div></div><div class=\\\"row\\\"><div class=\\\"col-md-8 col-md-offset-2\\\"><center><nvd3 data=\\\"vm.forceGraph.data[vm.forceGraph.currYearIdx]\\\" options=\\\"vm.forceGraph.options\\\"></nvd3></center><rzslider ng-hide=\\\"!vm.slider_options.ceil\\\" rz-slider-model=\\\"vm.forceGraph.currYearIdx\\\" rz-slider-options=\\\"vm.slider_options\\\"></rzslider></div></div><div class=\\\"row col-md-12 pager\\\"><button class=\\\"btn btn-success\\\" ng-csv=\\\"vm.downloadData()\\\" filename=\\\"test.csv\\\">Save data</button></div></div>\");\n$templateCache.put(\"app/components/shico/trackerParameters.template.html\",\"<div class=\\\"row form-horizontal col-md-12\\\"><p class=\\\"lead\\\">Concept search</p><div class=\\\"form-group col-md-11\\\"><input type=\\\"text\\\" ng-model=\\\"vm.parameters.terms\\\" class=\\\"form-control\\\" id=\\\"terms\\\" placeholder=\\\"Search concepts\\\"></div><div class=\\\"form-group col-md-1\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"isOpen = !isOpen\\\">+</button></div><div uib-collapse=\\\"!isOpen\\\"><div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"maxConcepts\\\">Max terms</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.maxTerms\\\" min=\\\"1\\\" max=\\\"20\\\" class=\\\"form-control\\\" id=\\\"maxConcepts\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"maxRelatedTerms\\\">Max related terms</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.maxRelatedTerms\\\" min=\\\"1\\\" max=\\\"20\\\" class=\\\"form-control\\\" id=\\\"maxRelatedTerms\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"minDist\\\">Minimum concept distance</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.minDist\\\" min=\\\"0.1\\\" max=\\\"10.0\\\" step=\\\"0.1\\\" class=\\\"form-control\\\" id=\\\"minDist\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"wordBoost\\\">Word boost</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.wordBoost\\\" min=\\\"0.1\\\" max=\\\"10.0\\\" step=\\\"0.1\\\" class=\\\"form-control\\\" id=\\\"wordBoost\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"sumDistances\\\">Sum distances</label> <input type=\\\"checkbox\\\" ng-model=\\\"vm.parameters.sumDistances\\\" class=\\\"form-control\\\" id=\\\"sumDistances\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"algorithm\\\">Algorithm:</label><select ng-model=\\\"vm.parameters.algorithm\\\" name=\\\"algorithm\\\"><option data-ng-repeat=\\\"algo in vm.algorithms\\\" value=\\\"{{ algo }}\\\">{{ algo }}</option></select></div><div class=\\\"form-group col-md-12\\\"><label for=\\\"forward\\\">Track direction</label><div class=\\\"radio\\\"><label><input type=\\\"radio\\\" ng-model=\\\"vm.parameters.forwards\\\" ng-value=\\\"true\\\" id=\\\"forward\\\"> Forwards</label></div><div class=\\\"radio\\\"><label><input type=\\\"radio\\\" ng-model=\\\"vm.parameters.forwards\\\" ng-value=\\\"false\\\" id=\\\"forward\\\"> Backwards</label></div></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"yearsInterval\\\">Years in interval</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.aggYearsInInterval\\\" min=\\\"1\\\" max=\\\"10\\\" step=\\\"1\\\" class=\\\"form-control\\\" id=\\\"yearsInterval\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"wordsPerYear\\\">Words per year</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.aggWordsPerYear\\\" min=\\\"1\\\" max=\\\"100\\\" step=\\\"1\\\" class=\\\"form-control\\\" id=\\\"wordsPerYear\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"aggWeighFunc\\\">Weighing function</label><select ng-model=\\\"vm.parameters.aggWeighFunction\\\" name=\\\"aggWeighFunc\\\"><option data-ng-repeat=\\\"wFunc in vm.weighFuncs\\\" value=\\\"{{ wFunc }}\\\">{{ wFunc }}</option></select></div><div class=\\\"form-group form-inline col-md-4\\\"><label for=\\\"aggWFParam\\\">Weighing function parameter</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.aggWFParam\\\" min=\\\"1\\\" max=\\\"10\\\" step=\\\"0.1\\\" class=\\\"form-control\\\" id=\\\"aggWFParam\\\"></div></div><div class=\\\"form-group col-md-11\\\">Year period:<rzslider rz-slider-model=\\\"vm.years.from\\\" rz-slider-high=\\\"vm.years.to\\\" rz-slider-options=\\\"vm.years.options\\\"></rzslider></div></div></div>\");}]);"],"sourceRoot":"/source/"}