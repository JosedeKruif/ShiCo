{"version":3,"sources":["scripts/app.js"],"names":["angular","module","TrackerParametersService","$http","marked","getParameters","vm","parameters","setParameters","params","forEach","val","key","isDefined","updateYearKeys","yearValues","availableYears","values","idxYearFrom","from","idxYearTo","to","startKey","endKey","loadToolTip","url","ttKey","method","success","content","tooltips","this","terms","maxTerms","maxRelatedTerms","minSim","wordBoost","forwards","boostMethod","algorithm","aggWeighFunction","aggWFParam","aggYearsInInterval","aggWordsPerYear","doCleaning","options","floor","ceil","step","onChange","features","canClean","service","$inject","trackerParameters","directive","scope","templateUrl","controllerAs","controller","TrackerParametersController","$scope","$timeout","toggleOpen","isOpen","$broadcast","algorithms","weighFuncs","directions","boostMethods","years","trackerGraphs","TrackerGraphsController","GraphControlService","yearsInSight","yearIdx","forceGraph","currYearIdx","addBorder","svg","attr","downloadData","rawData","getRawData","stream","allWords","Set","allYears","wordValues","year","push","weight","word","add","headers","concat","csvData","row","streamGraph","scatterGraph","vocabularies","slider_options","getYearLabel","parameterIO","ParameterIOController","hide","readOnly","text","JSON","stringify","btnText","closeParamIO","parse","GraphConfigService","yearLabels","update","data","idx","setVocabulary","setStreamYears","streamData","formatForStream","forceData","formatForForce","networks","scatterData","formatForScatter","embedded","vocabs","length","network","embedding","embedding2","getConfig","showTicksValues","translate","postProcess","e","d3","selectAll","remove","d","tf","select","t","transform","d_data","parentNode","append","vocab","wordColourIdx","getColour","item","name","cIdx","colours","getX","point","getY","tickY","tickVal","parseFloat","toFixed","tickYear","yearTickLabels","labels","processNode","node","addTextLabels","setSize","forceGraphHooks","hook","style","type","chooseSymbolType","chooseSymbolSize","Math","log2","count","customTooltipContent","showContent","html","addForceGraphHook","callback","graphName","streamConfig","forceConfig","chart","height","width","margin","top","right","bottom","left","x","y","xAxis","tickFormat","yAxis","color","customSymbol","symbol","size","nodeExtras","curveLinks","useArrows","tooltip","contentGenerator","duration","zoom","enabled","scaleExtent","useFixedDomain","useNiceScale","horizontalOff","verticalOff","unzoomEventType","showLabels","showMaxMin","dispatch","renderEnd","scale","category20","FormController","ConceptService","doPost","resp","trackConcept","trackerPromise","then","SettingsService","$resource","doLoad","configFile","get","$promise","config","baseURL","trackerURL","serverSettingsUrl","serverSettingsResource","settings","first","last","cleaning","$log","trackerParams","tracker","request","trackPromise","parseTermTrack","net","nodes","toJSON","runBlock","debug","run","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,SACN,aACA,YACA,eACA,SACA,OACA,WACA,SACA,aACA,QACA,iBAIN,WACE,YAMA,SAASC,GAAyBC,EAAOC,GA+DvC,QAASC,KACP,MAAOC,GAAGC,WAGZ,QAASC,GAAcC,GAErBT,QAAQU,QAAQJ,EAAGC,WAAY,SAASI,EAAIC,GACvCZ,QAAQa,UAAUJ,EAAOG,MAC1BN,EAAGC,WAAWK,GAAOH,EAAOG,MAKlC,QAASE,KAIP,GAAIC,GAAaT,EAAGU,eAAeC,OAC/BC,EAAcZ,EAAGU,eAAeG,KAChCC,EAAYd,EAAGU,eAAeK,EAElCf,GAAGC,WAAWe,SAAWP,EAAWG,GACpCZ,EAAGC,WAAWgB,OAAWR,EAAWK,GAGtC,QAASI,GAAYC,EAAKC,GACxBvB,GAAOwB,OAAQ,MAAMF,IAAKA,IACvBG,QAAQ,SAASC,GACdvB,EAAGwB,SAASJ,GAAStB,EAAOyB,KA1FpC,GAAIvB,GAAKyB,IAETzB,GAAGC,YACDyB,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBZ,SAAU,GACVC,OAAQ,GACRY,OAAQ,GACRC,UAAW,EACXC,SAAU,UACVC,YAAa,iBACbC,UAAW,WAEXC,iBAAkB,WAClBC,WAAY,EACZC,mBAAoB,EACpBC,gBAAiB,EACjBC,WAAY,MAGdtC,EAAGU,gBACDG,KAAM,EAAGE,GAAI,EACbJ,UACA4B,SACEC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,SAAUnC,IAIdR,EAAG4C,UACDC,UAAU,GAIZ7C,EAAGwB,YACHN,EAAY,uBAA4B,eACxCA,EAAY,oBAA4B,YACxCA,EAAY,2BAA4B,mBACxCA,EAAY,kBAA4B,UACxCA,EAAY,qBAA4B,aACxCA,EAAY,uBAA4B,eACxCA,EAAY,qBAA4B,aACxCA,EAAY,qBAA4B,aACxCA,EAAY,2BAA4B,mBACxCA,EAAY,wBAA4B,gBACxCA,EAAY,qBAA4B,aACxCA,EAAY,mBAA4B,WACxCA,EAAY,sBAA4B,cACxCA,EAAY,sBAA4B,aAExC,IAAI4B,IACF/C,cAAeA,EACfG,cAAeA,EACfsB,SAAUxB,EAAGwB,SACbd,eAAgBV,EAAGU,eACnBkC,SAAU5C,EAAG4C,SAEf,OAAOE,GAjETpD,QACGC,OAAO,SACPmD,QAAQ,2BAA4BlD,GAiGvCA,EAAyBmD,SAAW,QAAS,aAE/C,WACE,YAMA,SAASC,KACL,GAAIC,IACAC,SACAC,YAAa,uDACbC,aAAc,KACdC,WAAY,8BAEhB,OAAOJ,GAXXvD,QACGC,OAAO,SACPsD,UAAU,oBAAqBD,MAapC,WACE,YAMA,SAASM,GAA4BC,EAAQC,EAAU5D,GAsBrD,QAAS6D,KACPzD,EAAG0D,QAAU1D,EAAG0D,OAChBF,EAAS,WAEPD,EAAOI,WAAW,wBACjB,KA1BL,GAAI3D,GAAKyB,IAGTzB,GAAG4D,YAAc,WAAY,gBAC7B5D,EAAG6D,YAAc,WAAY,SAAU,OACvC7D,EAAG8D,YAAc,UAAW,YAC5B9D,EAAG+D,cAAgB,iBAAkB,UACrC/D,EAAGsC,YAAe,MAAO,MAGzBtC,EAAG0D,QAAS,EAGZ1D,EAAGgE,MAAQpE,EAAyBc,eACpCV,EAAG4C,SAAWhD,EAAyBgD,SACvC5C,EAAGC,WAAaL,EAAyBG,gBACzCC,EAAGwB,SAAW5B,EAAyB4B,SAGvCxB,EAAGyD,WAAaA,EAxBlB/D,QACGC,OAAO,SACP0D,WAAW,8BAA+BC,GAiC7CA,EAA4BP,SAAW,SAAU,WAAY,+BAC/D,WACE,YAMA,SAASkB,KACP,GAAIhB,IACFC,SACAC,YAAa,mDACbC,aAAc,KACdC,WAAY,0BAEd,OAAOJ,GAXTvD,QACGC,OAAO,SACPsD,UAAU,gBAAiBgB,MAahC,WACE,YAMA,SAASC,GAAwBC,GAe/B,QAASC,GAAaC,GACpB,MAAQrE,GAAGsE,WAAWC,YAAc,GAAMF,GAClCA,GAAYrE,EAAGsE,WAAWC,YAAc,EAGlD,QAASC,GAAUtB,GAEjBA,EAAMuB,IAAIC,KAAK,QAAS,uBAG1B,QAASC,KACP,GAAIC,GAAUT,EAAoBU,aAAaC,OAG3CC,EAAW,GAAIC,KACfC,IACJvF,SAAQU,QAAQwE,EAAS,SAASM,EAAYC,GAC5CF,EAASG,KAAKD,GACdzF,QAAQU,QAAQ8E,EAAY,SAASG,EAAQC,GAC3CP,EAASQ,IAAID,MAKjB,IAAIE,IAAY,IAAKC,OAAOR,GACxBS,GAAYF,EAUhB,OATA9F,SAAQU,QAAQ2E,EAAU,SAASO,GACjC,GAAIK,IAAQL,EACZ5F,SAAQU,QAAQ6E,EAAU,SAASE,GACjC,GAAI9E,GAAOiF,IAAQV,GAAQO,GAASP,EAAQO,GAAMG,GAAQ,CAC1DK,GAAIP,KAAK/E,KAEXqF,EAAQN,KAAKO,KAGRD,EAjDT,GAAI1F,GAAKyB,IAITzB,GAAG4F,YAAczB,EAAoByB,YACrC5F,EAAGsE,WAAaH,EAAoBG,WACpCtE,EAAG6F,aAAe1B,EAAoB0B,aACtC7F,EAAG8F,aAAe3B,EAAoB2B,aACtC9F,EAAG+F,eAAiB5B,EAAoB4B,eACxC/F,EAAGgG,aAAe7B,EAAoB6B,aACtChG,EAAGoE,aAAeA,EAClBpE,EAAGwE,UAAYA,EACfxE,EAAG2E,aAAeA,EAjBpBjF,QACGC,OAAO,SACP0D,WAAW,0BAA2Ba,GAyDzCA,EAAwBnB,SAAW,0BAArC,WACE,gBAQF,WACE,YAMA,SAASkD,KACL,GAAIhD,IACAC,SACAC,YAAa,iDACbC,aAAc,KACdC,WAAY,wBAEhB,OAAOJ,GAXXvD,QACGC,OAAO,SACPsD,UAAU,cAAegD,MAa9B,WACE,YAMA,SAASC,GAAsBtG,GAU7B,QAASG,KACPC,EAAGmG,MAAO,EACVnG,EAAGoG,UAAW,EACdpG,EAAGqG,KAAOC,KAAKC,UAAU3G,EAAyBG,iBAClDC,EAAGwG,QAAU,KAGf,QAAStG,KACPF,EAAGmG,MAAO,EACVnG,EAAGoG,UAAW,EACdpG,EAAGqG,KAAO,GACVrG,EAAGwG,QAAU,OAGf,QAASC,KAEP,GADAzG,EAAGmG,MAAO,GACNnG,EAAGoG,SAAU,CACf,GAAIjG,GAASmG,KAAKI,MAAM1G,EAAGqG,KAC3BzG,GAAyBM,cAAcC,IA3B3C,GAAIH,GAAKyB,IACTzB,GAAGD,cAAgBA,EACnBC,EAAGE,cAAgBA,EACnBF,EAAGyG,aAAeA,EAElBzG,EAAGqG,KAAO,GACVrG,EAAGoG,UAAW,EACdpG,EAAGmG,MAAO,EAZZzG,QACGC,OAAO,SACP0D,WAAW,wBAAyB6C,GAqCvCA,EAAsBnD,SAAW,+BADnC,WACE,YAMA,SAASoB,GAAoBwC,GA2C3B,QAASX,GAAa3B,GACpB,MAAOrE,GAAG4G,WAAWvC,GAIvB,QAASwC,GAAOC,GAEd9G,EAAG4E,QAAUkC,CAGb,IAAI7B,MACAF,EAAW,GAAIC,IACnBtF,SAAQU,QAAQ0G,EAAKhC,OAAQ,SAASI,EAAYC,GAChDF,EAASG,KAAKD,GACdzF,QAAQU,QAAQ8E,EAAY,SAASG,EAAQC,GAC3CP,EAASQ,IAAID,MAKjB,IAAIjB,KACJ3E,SAAQU,QAAQ6E,EAAU,SAASE,EAAM4B,GACvC1C,EAAQc,GAAQ4B,IAIlBJ,EAAmBK,cAAcjC,GACjC4B,EAAmBM,eAAehC,GAClCjF,EAAG4G,WAAa3B,CAGhB,IAAIiC,GAAaC,EAAgBL,EAAKhC,OAAQT,EAASU,EAAUE,GAC7DmC,EAAaC,EAAeP,EAAKQ,SAAUjD,GAC3CkD,EAAcC,EAAiBV,EAAKW,SAAUpD,EAGlDrE,GAAG4F,YAAYkB,KAAOI,EACtBlH,EAAGsE,WAAWwC,KAAOM,EACrBpH,EAAG6F,aAAaiB,KAAOS,EACvBvH,EAAG8F,aAAagB,KAAOA,EAAKY,OAE5B1H,EAAG+F,eAAetD,KAAOzC,EAAG4G,WAAWe,OAAO,EAGhD,QAAS9C,KACP,MAAO7E,GAAG4E,QAGZ,QAASuC,GAAgBL,EAAMzC,EAASU,EAAUE,GAChD,GAAIiC,KAYJ,OAXAxH,SAAQU,QAAQ2E,EAAU,SAASO,GACjC,GAAI3E,KACJjB,SAAQU,QAAQ6E,EAAU,SAASE,GACjC,GAAI9E,GAAOiF,IAAQwB,GAAK3B,GAAS2B,EAAK3B,GAAMG,GAAQ,CACpD7D,MAAK2D,MAAOf,EAAQc,GAAO9E,KAC1BM,GACHc,KAAK2D,MACH9E,IAAKgF,EACL3E,OAAQA,KAETuG,GACIA,EAGT,QAASG,GAAeP,EAAMzC,GAC5B,GAAI+C,KAMJ,OAJA1H,SAAQU,QAAQ0G,EAAM,SAASc,EAASzC,GACtCiC,EAAU/C,EAAQc,IAASyC,IAGtBR,EAGT,QAASI,GAAiBV,EAAMzC,GAC9B,GAAIkD,KAYJ,OAVA7H,SAAQU,QAAQ0G,EAAM,SAASe,EAAW1C,GACxC,GAAI2C,KAEAxH,IAAQ,SACRK,OAAQkH,GAGZN,GAAYlD,EAAQc,IAAS2C,IAGxBP,EAjIT,GAAIvH,GAAKyB,IAETzB,GAAG4F,aACDrD,QAASoE,EAAmBoB,UAAU,eACtCjB,SAGF9G,EAAGsE,YACD/B,QAASoE,EAAmBoB,UAAU,cACtCjB,QACAvC,YAAa,GAGfvE,EAAG6F,cACDtD,QAASoE,EAAmBoB,UAAU,gBACtCjB,SAGF9G,EAAG8F,cACDgB,SAGF9G,EAAG4G,cACH5G,EAAG+F,gBACDvD,MAAO,EACPC,KAAM,EACNuF,iBAAiB,EACjBC,UAAWjC,EAGb,IAAIlD,IACF+D,OAAQA,EACRhC,WAAYA,EACZmB,aAAcA,EACdJ,YAAa5F,EAAG4F,YAChBtB,WAAatE,EAAGsE,WAChBuB,aAAc7F,EAAG6F,aACjBC,aAAc9F,EAAG8F,aACjBC,eAAgB/F,EAAG+F,eAErB,OAAOjD,GA7CTpD,QACKC,OAAO,SACPmD,QAAQ,sBAAuBqB,GA2IpCA,EAAoBpB,SAAW,yBAFjC,WACE,YAMA,SAAS4D,KA6EP,QAASuB,GAAYC,GAEnBC,GAAGC,UAAU,UAAUC,SAEvBF,GAAGC,UAAU,yBAAyB,GAAGjI,QAAQ,SAASmI,GACxD,GAAIC,GAAKJ,GAAGK,OAAOF,GAAG7D,KAAK,aACvBgE,EAAIN,GAAGO,UAAUH,GAAIP,SACzBS,GAAE,GAAKA,EAAE,GAAK,EACd,IAAIE,GAASR,GAAGK,OAAOF,GAAGzB,MAE1B,IAAG8B,EAAO,GAAG,GAAI,CACf,GAAItD,GAAOsD,EAAO,GAAG,GAAGtD,IACxB8C,IAAGK,OAAOF,EAAEM,YACTC,OAAO,QACPpE,KAAK,QAAS,SACd2B,KAAKf,GACLZ,KAAK,YAAa,aAAagE,EAAE,GAAG,IAAIA,EAAE,GAAG,QAoBtD,QAAS1B,GAAc+B,GACrB,GAAIhC,GAAM,CAGVrH,SAAQU,QAAQ2I,EAAO,SAASzD,GAC9B0D,EAAc1D,GAAQyB,EACtBA,GAAO,IAIX,QAASkC,GAAUC,GACjB,GAAI5D,GAAO4D,EAAK5I,KAAO4I,EAAKC,KACxBC,EAAOJ,EAAc1D,EACzB,OAAO8D,GAAOC,EAAQD,GAAQ,UAIhC,QAASE,GAAKC,GAAQ,MAAOA,GAAM,GACnC,QAASC,GAAKD,GAAQ,MAAOA,GAAM,GACnC,QAASE,GAAMC,GAAW,MAAOC,YAAWD,GAASE,QAAQ,GAE7D,QAASC,GAAS9C,GAChB,MAAGA,KAAO+C,GAAyBA,EAAe/C,GACpCA,EAEhB,QAASE,GAAe8C,GACtBD,EAAiBC,EAInB,QAASC,GAAYC,GAEnBC,EAAcD,GACdE,EAAQF,GACRvK,QAAQU,QAAQgK,EAAiB,SAASC,GACxCA,EAAKJ,KAIT,QAASC,GAAcD,GACrBA,EAAKnB,OAAO,QACTpE,KAAK,KAAM,IACXA,KAAK,KAAM,SACX2B,KAAK,SAASkC,GAAK,MAAOA,GAAEY,OAC5BmB,MAAM,cAAe,SAAS/B,GAAK,MAAe,QAARA,EAAEgC,KAAa,OAAO,KAGrE,QAASJ,GAAQF,GACfA,EAAKxB,OAAO,UACT/D,KAAK,IAAK,SAAS6D,GAAK,MAAO,GAAI,EAAKA,EAAE,QAG/C,QAASiC,GAAiBjC,GACxB,MAAY,QAARA,EAAEgC,KACG,cACS,QAARhC,EAAEgC,KACH,SAEA,UAIX,QAASE,GAAiBlC,GACxB,MAAO,IAAKmC,KAAKC,KAAK,EAAIpC,EAAEqC,OAG9B,QAASC,GAAqBtC,GAC5B,GAAIuC,IAAgB,OAAQ,QAAS,UAEjCC,EAAO,SAaX,OAZAA,IAAQ,sDAAwDxC,EAAE,KAAU,8BAC5EwC,GAAQ,UAERrL,QAAQU,QAAQ0K,EAAa,SAASxK,GACpCyK,GAAQ,OACRA,GAAQ,mBAAqBzK,EAAM,QACnCyK,GAAQ,qBAAuBxC,EAAEjI,GAAO,QACxCyK,GAAQ,UAGVA,GAAQ,WACRA,GAAQ,WAIV,QAASC,GAAkBC,GACzBb,EAAgBhF,KAAK6F,GAGvB,QAASlD,GAAUmD,GACjB,MAAiB,gBAAdA,EACMC,EACe,eAAdD,EACDE,EACe,iBAAdF,EACDrF,EADF,OA7MT,GAAIsF,IACFE,OACId,KAAM,mBACNe,OAAQ,IACRC,MAAO,IACPC,QACIC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEVC,EAAGvC,EACHwC,EAAGtC,EACHuC,OACEC,WAAYnC,GAEdoC,OACED,WAAYvC,GAEdyC,MAAOjD,IAITkD,EAAe/D,GAAG3D,IAAI2H,SACb7B,KAAMC,GACN6B,KAAM5B,GAGfW,GACFC,OACId,KAAM,qBACNe,OAAQ,IACRC,MAAO,IACPW,MAAOjD,EACPmD,OAAQD,EACRG,WAAYtC,EACZuC,YAAa,EACbC,WAAW,EACXC,SAAWC,iBAAkB7B,KAK/BhF,GACFwF,OACId,KAAM,eACNe,OAAQ,IACRC,MAAO,IACPW,OAAS,WACTS,SAAU,IACVC,MACEC,SAAS,EACTC,aAAe,EAAG,IAClBC,gBAAgB,EAChBC,cAAc,EACdC,eAAe,EACfC,aAAa,EACbC,gBAAiB,iBAEnBV,SAAWI,SAAS,GACpBO,YAAY,EACZrB,OACEsB,YAAY,EACZrB,WAAY,WAAa,MAAO,KAElCC,OACEoB,YAAY,EACZrB,WAAY,WAAa,MAAO,KAElCsB,UACEC,UAAWrF,KA0BfmB,EAAUjB,GAAGoF,MAAMC,aAEnB3D,KACAM,KACApB,KAEAlG,GACFiF,UAAWA,EACXd,eAAgBA,EAChB+D,kBAAmBA,EACnBhE,cAAeA,EAEjB,OAAOlE,GAlHTpD,QACKC,OAAO,SACPmD,QAAQ,qBAAsB6D,MAwNrC,WACE,YAMA,SAAS+G,GAAeC,EACA/N,EACAuE,GAKtB,QAASyJ,KACP,GAAIzN,GAASP,EAAyBG,gBAClC8N,EAAOF,EAAeG,aAAa3N,EACvCH,GAAG+N,eAAiBF,EACpBA,EAAKG,KAAK7J,EAAoB0C,QARhC,GAAI7G,GAAKyB,IAETzB,GAAG4N,OAASA,EATdlO,QACKC,OAAO,SACP0D,WAAW,iBAAkBqK,GAqBlCA,EAAe3K,SAAW,iBAAkB,2BAA4B,0BAH1E,WACE,YAMA,SAASkL,GAAgBC,EAAWtO,GAMlC,QAASuO,KACP,GAAIC,GAAaF,EAAU,cAC3BE,GAAWC,MAAMC,SAASN,KAAK,SAASO,GACtC,GAAIC,GAAUD,EAAOC,QACjBC,EAAaD,EAAU,gBACvBE,EAAoBF,EAAU,gBAEf,IAAhBA,EAAQ7G,SACT8G,EAAa,cACbC,EAAoB,uCAItB5L,EAAQ2L,WAAaA,CAGrB,IAAIE,GAAyBT,EAAUQ,EACvCC,GAAuBN,MAAMC,SAASN,KAAK,SAASY,GAElDhP,EAAyBc,eAAeG,KAAO+N,EAAS5K,MAAM6K,MAC9DjP,EAAyBc,eAAeK,GAAK6N,EAAS5K,MAAM8K,KAC5DlP,EAAyBc,eAAeC,OAASiO,EAAS5K,MAAMrD,OAChEf,EAAyBc,eAAe6B,QAAQC,MAAQoM,EAAS5K,MAAM6K,MACvEjP,EAAyBc,eAAe6B,QAAQE,KAAOmM,EAAS5K,MAAM8K,KAGtElP,EAAyBgD,SAASC,SAAW+L,EAASG,aA/B5D,GAAIjM,IACFqL,OAAQA,EAEV,OAAOrL,GARTpD,QACKC,OAAO,SACPmD,QAAQ,kBAAmBmL,GA6ChCA,EAAgBlL,SAAW,YAAa,+BAJ1C,WACE,YAMA,SAAS4K,GAAeO,EAAWc,EAAMf,GAMvC,QAASH,GAAamB,GAEpB,GAAIC,GAAUhB,EAAUD,EAAgBQ,YACpCU,EAAUD,EAAQb,IAAIY,GACtBG,EAAeD,EAAQb,SAASN,KAAKqB,EACzC,OAAOD,GAGT,QAASC,GAAevI,GAStB,MALApH,SAAQU,QAAQ0G,EAAKQ,SAAU,SAASgI,EAAInK,GAC1CzF,QAAQU,QAAQkP,EAAIC,MAAO,SAAStF,GAClCA,EAAK9E,KAAOA,MAGT2B,EAAK0I,SAtBd,GAAI1M,IACFgL,aAAcA,EAEhB,OAAOhL,GARTpD,QACKC,OAAO,SACPmD,QAAQ,iBAAkB6K,GAmC/BA,EAAe5K,SAAW,YAAa,OAAQ,sBALjD,WACE,YAOA,SAAS0M,GAAST,EAAMf,GACtBe,EAAKU,MAAM,gBACXzB,EAAgBE,SAPlBzO,QACGC,OAAO,SACPgQ,IAAIF,GAePA,EAAS1M,SAAW,OAAQ,sBAL9B,WACE,YAEArD,SACGC,OAAO,YAGZ,WACE,YAOA,SAAS4O,GAAOqB,EAAcC,GAE5BD,EAAaE,cAAa,GAG1BD,EAAaE,WAAY,EACzBF,EAAaG,QAAU,IACvBH,EAAaI,cAAgB,kBAC7BJ,EAAaK,mBAAoB,EACjCL,EAAaM,aAAc,EAd7BzQ,QACGC,OAAO,SACP4O,OAAOA,GAuBVA,EAAOxL,SAAW,eAAgB,mBAPpCrD,QAAQC,OAAO,SAASgQ,KAAK,iBAAkB,SAASS,GAAiBA,EAAeC,IAAI,iDAAiD,0hBAC7ID,EAAeC,IAAI,mDAAmD,g0DACtED,EAAeC,IAAI,uDAAuD","file":"scripts/app.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('shico', [\n      'ngResource',\n      'ngAnimate',\n      'ui.bootstrap',\n      'toastr',\n      'nvd3',\n      'rzModule',\n      'cgBusy',\n      'ngSanitize',\n      'ngCsv',\n      'hc.marked'\n    ]);\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .service('TrackerParametersService', TrackerParametersService);\n\n  function TrackerParametersService($http, marked) {\n    var vm = this;\n\n    vm.parameters = {\n      terms: '',\n      maxTerms: 10,\n      maxRelatedTerms: 10,\n      startKey: '',\n      endKey: '',\n      minSim: 0.5,\n      wordBoost: 1.0,\n      forwards: 'Forward',\n      boostMethod: 'Sum similarity',\n      algorithm: 'Adaptive',   //  'adaptive' or 'non-adaptive'\n      // Aggregator parameters:\n      aggWeighFunction: 'Gaussian',\n      aggWFParam: 1,\n      aggYearsInInterval: 2,\n      aggWordsPerYear: 5,\n      doCleaning: 'No'\n    };\n\n    vm.availableYears = {\n      from: 0, to: 1,\n      values: {},\n      options: {\n        floor: 0,\n        ceil: 1,\n        step: 1,\n        onChange: updateYearKeys\n      }\n    };\n\n    vm.features = {\n      canClean: false\n    }\n\n    // Load tool tips for all parameters\n    vm.tooltips = {};\n    loadToolTip('/help/seedConcept.md'    , 'seedConcept');\n    loadToolTip('/help/maxTerms.md'       , 'maxTerms');\n    loadToolTip('/help/maxRelatedTerms.md', 'maxRelatedTerms');\n    loadToolTip('/help/minSim.md'         , 'minSim');\n    loadToolTip('/help/wordBoost.md'      , 'wordBoost');\n    loadToolTip('/help/boostMethod.md'    , 'boostMethod');\n    loadToolTip('/help/algorithm.md'      , 'algorithm');\n    loadToolTip('/help/direction.md'      , 'direction');\n    loadToolTip('/help/yearsInInterval.md', 'yearsInInterval');\n    loadToolTip('/help/wordsPerYear.md'   , 'wordsPerYear');\n    loadToolTip('/help/weighFunc.md'      , 'weighFunc');\n    loadToolTip('/help/wFParam.md'        , 'wFParam');\n    loadToolTip('/help/doCleaning.md'     , 'doCleaning');\n    loadToolTip('/help/yearPeriod.md'     , 'yearPeriod');\n\n    var service = {\n      getParameters: getParameters,\n      setParameters: setParameters,\n      tooltips: vm.tooltips,\n      availableYears: vm.availableYears,\n      features: vm.features\n    };\n    return service;\n\n    function getParameters() {\n      return vm.parameters;\n    }\n\n    function setParameters(params) {\n      // Copy parameters from `params` which already exist in `vm.parameters`\n      angular.forEach(vm.parameters, function(val,key) {\n        if(angular.isDefined(params[key])) {\n          vm.parameters[key] = params[key]\n        }\n      });\n    }\n\n    function updateYearKeys() {\n      // Copy values from slider to startKey and endKey\n      // Slider contains only year (e.g. 1954), while startKey and endKey\n      // require the name of the corresponding w2v model (e.g. 1950_1959)\n      var yearValues = vm.availableYears.values;\n      var idxYearFrom = vm.availableYears.from;\n      var idxYearTo = vm.availableYears.to;\n\n      vm.parameters.startKey = yearValues[idxYearFrom];\n      vm.parameters.endKey   = yearValues[idxYearTo];\n    }\n\n    function loadToolTip(url, ttKey) {\n      $http({method: 'GET',url: url})\n        .success(function(content){\n            vm.tooltips[ttKey] = marked(content);\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .directive('trackerParameters', trackerParameters);\n\n  function trackerParameters() {\n      var directive = {\n          scope: {},    // Directive has it's own personal scope\n          templateUrl: 'app/components/shico/trackerParameters.template.html',\n          controllerAs: 'vm',\n          controller: 'TrackerParametersController'\n      };\n      return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .controller('TrackerParametersController', TrackerParametersController);\n\n  function TrackerParametersController($scope, $timeout, TrackerParametersService) {\n    var vm = this;\n\n    // Values for dropdown items\n    vm.algorithms = ['Adaptive', 'Non-adaptive'];\n    vm.weighFuncs = ['Gaussian', 'Linear', 'JSD'];\n    vm.directions = ['Forward', 'Backward'];\n    vm.boostMethods = ['Sum similarity', 'Counts'];\n    vm.doCleaning = [ 'Yes', 'No' ];\n\n    // Open/close advanced parameters section\n    vm.isOpen = false;\n\n    // We use variables from TrackerParametersService directly.\n    vm.years = TrackerParametersService.availableYears;\n    vm.features = TrackerParametersService.features;\n    vm.parameters = TrackerParametersService.getParameters();\n    vm.tooltips = TrackerParametersService.tooltips;\n\n    // Expose functions\n    vm.toggleOpen = toggleOpen;\n\n    function toggleOpen() {\n      vm.isOpen = !vm.isOpen;\n      $timeout(function () {\n        // Force redraw of slider\n        $scope.$broadcast('rzSliderForceRender');\n      }, 500); // Wait 500 ms before triggering redraw\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .directive('trackerGraphs', trackerGraphs);\n\n  function trackerGraphs() {\n    var directive = {\n      scope: {},    // Directive has it's own personal scope\n      templateUrl: 'app/components/shico/trackerGraphs.template.html',\n      controllerAs: 'vm',\n      controller: 'TrackerGraphsController'\n    };\n    return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .controller('TrackerGraphsController', TrackerGraphsController);\n\n  function TrackerGraphsController(GraphControlService) {\n    var vm = this;\n\n    // Share graph data from service to controller\n    // so directive can find them.\n    vm.streamGraph = GraphControlService.streamGraph;\n    vm.forceGraph = GraphControlService.forceGraph;\n    vm.scatterGraph = GraphControlService.scatterGraph;\n    vm.vocabularies = GraphControlService.vocabularies;\n    vm.slider_options = GraphControlService.slider_options;\n    vm.getYearLabel = GraphControlService.getYearLabel;\n    vm.yearsInSight = yearsInSight;\n    vm.addBorder = addBorder;\n    vm.downloadData = downloadData;\n\n    function yearsInSight(yearIdx) {\n      return (vm.forceGraph.currYearIdx - 1) <= yearIdx &&\n              yearIdx <= (vm.forceGraph.currYearIdx + 1);\n    }\n\n    function addBorder(scope) {\n      // Add border\n      scope.svg.attr('style', 'border-style: solid');\n    }\n\n    function downloadData() {\n      var rawData = GraphControlService.getRawData().stream;\n\n      // allWords and allYears we already had -- we shouldn't need to build them again\n      var allWords = new Set();\n      var allYears = [];\n      angular.forEach(rawData, function(wordValues, year) {\n        allYears.push(year);\n        angular.forEach(wordValues, function(weight, word) {\n          allWords.add(word);\n        });\n      });\n\n      // Create CSV file\n      var headers = [ '' ].concat(allYears);\n      var csvData = [ headers ];\n      angular.forEach(allWords, function(word) {\n        var row = [ word ];\n        angular.forEach(allYears, function(year) {\n          var val = (word in rawData[year]) ? rawData[year][word] : 0;\n          row.push(val);\n        });\n        csvData.push(row);\n      });\n\n      return csvData;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n//  console.log('Running temp code...');\n\n//  var shico = angular\n//      .module('shico');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .directive('parameterIo', parameterIO);\n\n  function parameterIO() {\n      var directive = {\n          scope: {},    // Directive has it's own personal scope\n          templateUrl: 'app/components/shico/parameterIO.template.html',\n          controllerAs: 'vm',\n          controller: 'ParameterIOController'\n      };\n      return directive;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .controller('ParameterIOController', ParameterIOController);\n\n  function ParameterIOController(TrackerParametersService) {\n    var vm = this;\n    vm.getParameters = getParameters;\n    vm.setParameters = setParameters;\n    vm.closeParamIO = closeParamIO;\n\n    vm.text = '';\n    vm.readOnly = false;\n    vm.hide = true;\n\n    function getParameters () {\n      vm.hide = false;\n      vm.readOnly = true;\n      vm.text = JSON.stringify(TrackerParametersService.getParameters());\n      vm.btnText = 'Ok';\n    }\n\n    function setParameters () {\n      vm.hide = false;\n      vm.readOnly = false;\n      vm.text = '';\n      vm.btnText = 'Load';\n    }\n\n    function closeParamIO() {\n      vm.hide = true;\n      if(!vm.readOnly) {\n        var params = JSON.parse(vm.text);\n        TrackerParametersService.setParameters(params);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .service('GraphControlService', GraphControlService);\n\n  function GraphControlService(GraphConfigService) {\n    var vm = this;\n\n    vm.streamGraph = {\n      options: GraphConfigService.getConfig('streamGraph'),\n      data:    []\n    };\n\n    vm.forceGraph = {\n      options: GraphConfigService.getConfig('forceGraph'),\n      data: [],\n      currYearIdx: 0\n    };\n\n    vm.scatterGraph = {\n      options: GraphConfigService.getConfig('scatterGraph'),\n      data: []\n    };\n\n    vm.vocabularies = {\n      data: []\n    };\n\n    vm.yearLabels = [];\n    vm.slider_options = {\n      floor: 0,\n      ceil: 0,\n      showTicksValues: false,\n      translate: getYearLabel\n    };\n\n    var service = {\n      update: update,\n      getRawData: getRawData,\n      getYearLabel: getYearLabel,\n      streamGraph: vm.streamGraph,\n      forceGraph:  vm.forceGraph,\n      scatterGraph: vm.scatterGraph,\n      vocabularies: vm.vocabularies,\n      slider_options: vm.slider_options\n    };\n    return service;\n\n    function getYearLabel(yearIdx) {\n      return vm.yearLabels[yearIdx];\n    }\n\n    // Update graphs with the given data\n    function update(data) {\n      // Keep raw data for further processing if required\n      vm.rawData = data;\n\n      // Collect all words and year labels on data\n      var allYears = [];\n      var allWords = new Set();\n      angular.forEach(data.stream, function(wordValues, year) {\n        allYears.push(year);\n        angular.forEach(wordValues, function(weight, word) {\n          allWords.add(word);\n        });\n      });\n\n      // Create year idx -> label table\n      var yearIdx = {};\n      angular.forEach(allYears, function(year, idx) {\n        yearIdx[year] = idx;\n      });\n\n      // Register vocabulary and year labels with to be used by config\n      GraphConfigService.setVocabulary(allWords);\n      GraphConfigService.setStreamYears(allYears);\n      vm.yearLabels = allYears;\n\n      // Prepare data on format suitable from NVD3\n      var streamData = formatForStream(data.stream, yearIdx, allWords, allYears);\n      var forceData  = formatForForce(data.networks, yearIdx);\n      var scatterData = formatForScatter(data.embedded, yearIdx);\n\n      // Register data on graph\n      vm.streamGraph.data = streamData;\n      vm.forceGraph.data = forceData;\n      vm.scatterGraph.data = scatterData;\n      vm.vocabularies.data = data.vocabs;\n\n      vm.slider_options.ceil = vm.yearLabels.length-1;\n    }\n\n    function getRawData() {\n      return vm.rawData;\n    }\n\n    function formatForStream(data, yearIdx, allWords, allYears) {\n      var streamData = [];\n      angular.forEach(allWords, function(word) {\n        var values = [];\n        angular.forEach(allYears, function(year) {\n          var val = (word in data[year]) ? data[year][word] : 0;\n          this.push([ yearIdx[year], val]);\n        }, values);\n        this.push({\n          key: word,\n          values: values\n        });\n      }, streamData);\n      return streamData;\n    }\n\n    function formatForForce(data, yearIdx) {\n      var forceData = {};\n\n      angular.forEach(data, function(network, year) {\n        forceData[yearIdx[year]] = network;\n      });\n\n      return forceData;\n    }\n\n    function formatForScatter(data, yearIdx) {\n      var scatterData = {};\n\n      angular.forEach(data, function(embedding, year) {\n        var embedding2 = [\n          {\n            key   : 'Group0',\n            values: embedding\n          }\n        ];\n        scatterData[yearIdx[year]] = embedding2;\n      });\n\n      return scatterData;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .service('GraphConfigService', GraphConfigService);\n\n  function GraphConfigService() {\n    // NVD3 configuration for stream graph\n    var streamConfig = {\n      chart: {\n          type: 'stackedAreaChart',\n          height: 500,\n          width: 1000,\n          margin : {\n              top: 20,\n              right: 20,\n              bottom: 60,\n              left: 55\n          },\n          x: getX,\n          y: getY,\n          xAxis: {\n            tickFormat: tickYear\n          },\n          yAxis: {\n            tickFormat: tickY\n          },\n          color: getColour\n      }\n    };\n\n    var customSymbol = d3.svg.symbol()\n                .type( chooseSymbolType )\n                .size( chooseSymbolSize );\n\n    // NVD3 configuration for force directed graph\n    var forceConfig = {\n      chart: {\n          type: 'forceDirectedGraph',\n          height: 300,\n          width: 300,\n          color: getColour,\n          symbol: customSymbol,\n          nodeExtras: processNode,\n          curveLinks:  true,\n          useArrows: true,\n          tooltip: { contentGenerator: customTooltipContent }\n      }\n    };\n\n    // NVD3 configuration for scatter plot\n    var scatterGraph = {\n      chart: {\n          type: \"scatterChart\",\n          height: 500,\n          width: 1000,\n          color: [ \"#1f77b4\" ],\n          duration: 350,\n          zoom: {\n            enabled: true,\n            scaleExtent: [ 1, 10 ],\n            useFixedDomain: false,\n            useNiceScale: false,\n            horizontalOff: false,\n            verticalOff: false,\n            unzoomEventType: \"dblclick.zoom\"\n          },\n          tooltip: { enabled: false },\n          showLabels: false,\n          xAxis: {\n            showMaxMin: false,\n            tickFormat: function() { return ''; }\n          },\n          yAxis: {\n            showMaxMin: false,\n            tickFormat: function() { return ''; }\n          },\n          dispatch: {\n            renderEnd: postProcess\n          }\n      }\n    };\n\n    function postProcess(e) {\n      // Remove old labels\n      d3.selectAll(\".label\").remove();\n\n      d3.selectAll(\".nv-scatterChart path\")[0].forEach(function(d) {\n        var tf = d3.select(d).attr(\"transform\")\n        var t = d3.transform(tf).translate;\n        t[0] = t[0] + 10;  //moving the translate x by 10 pixel.\n        var d_data = d3.select(d).data();\n\n        if(d_data[0][0]) { // Make sure we can read an object\n          var word = d_data[0][0].word;\n          d3.select(d.parentNode)\n            .append(\"text\")\n            .attr(\"class\", \"label\")\n            .text(word)\n            .attr(\"transform\", \"translate(\"+t[0]+\",\"+t[1]+\")\");\n        }\n      });\n    }\n\n    var colours = d3.scale.category20();\n\n    var yearTickLabels = {};   // Year markers for stream graph\n    var forceGraphHooks = [];\n    var wordColourIdx = {};\n\n    var service = {\n      getConfig: getConfig,\n      setStreamYears: setStreamYears,\n      addForceGraphHook: addForceGraphHook,\n      setVocabulary: setVocabulary\n    };\n    return service;\n\n    // Helper functions for all graphs\n    function setVocabulary(vocab) {\n      var idx = 0;\n      // Each word of vocabulary is assigned an unique ID, later used to assign colour\n      // TODO: can't we get a list of words from server?\n      angular.forEach(vocab, function(word) {\n        wordColourIdx[word] = idx;\n        idx += 1;\n      });\n    }\n\n    function getColour(item) {\n      var word = item.key || item.name;\n      var cIdx = wordColourIdx[word];\n      return cIdx ? colours(cIdx) : '#223344';\n    }\n\n    // Helper functions for streamConfig\n    function getX(point){ return point[0]; }\n    function getY(point){ return point[1]; }\n    function tickY(tickVal) { return parseFloat(tickVal).toFixed(1); }\n\n    function tickYear(idx) {\n      if(idx in yearTickLabels) { return yearTickLabels[idx]; }\n      else { return idx; }\n    }\n    function setStreamYears(labels) {\n      yearTickLabels = labels;\n    }\n\n    // Helper functions for forceConfig\n    function processNode(node) {\n      // Nodes have: {'name': 'str', 'type': 'seed', 'count': N, year: XXXX},\n      addTextLabels(node);\n      setSize(node);\n      angular.forEach(forceGraphHooks, function(hook) {\n        hook(node);\n      });\n    }\n\n    function addTextLabels(node) {\n      node.append(\"text\")\n        .attr(\"dx\", 12)\n        .attr(\"dy\", \".35em\")\n        .text(function(d) { return d.name; })\n        .style(\"font-weight\", function(d) { return d.type==\"seed\"?\"bold\":\"\"; });\n    }\n\n    function setSize(node) {\n      node.select('circle')\n        .attr('r', function(d) { return 5 + 2 * (d.count); });\n    }\n\n    function chooseSymbolType(d) {\n      if (d.type==\"seed\") {\n        return \"triangle-up\";\n      } else if(d.type==\"word\") {\n        return \"circle\";\n      } else {\n        return \"diamond\";\n      }\n    }\n\n    function chooseSymbolSize(d) {\n      return 50 * Math.log2(2 + d.count);\n    }\n\n    function customTooltipContent(d) {\n      var showContent = [ 'type', 'count', 'weight' ];\n\n      var html = '<table>';\n      html += '<thead><tr><td colspan=\"2\"><strong class=\"x-value\">' + d['name'] + '</strong></td></tr></thead>';\n      html += '<tbody>';\n\n      angular.forEach(showContent, function(key) {\n        html += '<tr>';\n        html += '<td class=\"key\">' + key + '</td>';\n        html += '<td class=\"value\">' + d[key] + '</td>';\n        html += '</tr>';\n      });\n\n      html += '</tbody>';\n      html += '</table>';\n      return html;\n    }\n\n    function addForceGraphHook(callback) {\n      forceGraphHooks.push(callback);\n    }\n\n    function getConfig(graphName) {\n      if(graphName === 'streamGraph') {\n        return streamConfig;\n      } else if(graphName === 'forceGraph'){\n        return forceConfig;\n      } else if(graphName === 'scatterGraph'){\n        return scatterGraph;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .controller('FormController', FormController);\n\n  function FormController(ConceptService,\n                          TrackerParametersService,\n                          GraphControlService) {\n    var vm = this;\n\n    vm.doPost = doPost;\n\n    function doPost() {\n      var params = TrackerParametersService.getParameters();\n      var resp = ConceptService.trackConcept(params);\n      vm.trackerPromise = resp; // ng-busy watches on trackerPromise\n      resp.then(GraphControlService.update);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .service('SettingsService', SettingsService);\n\n  function SettingsService($resource, TrackerParametersService) {\n    var service = {\n      doLoad: doLoad\n    };\n    return service;\n\n    function doLoad() {\n      var configFile = $resource('config.json');\n      configFile.get().$promise.then(function(config) {\n        var baseURL = config.baseURL;\n        var trackerURL = baseURL + '/track/:terms';\n        var serverSettingsUrl = baseURL + '/load-settings';\n\n        if(baseURL.length==0) {\n          trackerURL = 'dummy2.json';\n          serverSettingsUrl = 'http://localhost:5000/load-settings';\n        }\n\n        // Copy config from JSON to the service\n        service.trackerURL = trackerURL;\n\n        // Call serverSettingsUrl resource to server setting\n        var serverSettingsResource = $resource(serverSettingsUrl);\n        serverSettingsResource.get().$promise.then(function(settings) {\n          // Years available\n          TrackerParametersService.availableYears.from = settings.years.first;\n          TrackerParametersService.availableYears.to = settings.years.last;\n          TrackerParametersService.availableYears.values = settings.years.values;\n          TrackerParametersService.availableYears.options.floor = settings.years.first;\n          TrackerParametersService.availableYears.options.ceil = settings.years.last;\n\n          // Cleaning capabilities\n          TrackerParametersService.features.canClean = settings.cleaning;\n        });\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('shico')\n      .service('ConceptService', ConceptService);\n\n  function ConceptService($resource, $log, SettingsService) {\n    var service = {\n      trackConcept: trackConcept\n    };\n    return service;\n\n    function trackConcept(trackerParams) {\n      // trackerURL format: http://localhost:5000/track/:terms\n      var tracker = $resource(SettingsService.trackerURL);\n      var request = tracker.get(trackerParams);\n      var trackPromise = request.$promise.then(parseTermTrack);\n      return trackPromise;\n    }\n\n    function parseTermTrack(data) {\n      // If data needs to be parsed, it should be done here.\n\n      // Copy year into each node\n      angular.forEach(data.networks, function(net,year) {\n        angular.forEach(net.nodes, function(node) {\n          node.year = year;\n        });\n      });\n      return data.toJSON();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, SettingsService) {\n    $log.debug('runBlock end');\n    SettingsService.doLoad();\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('shico')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n})();\n\nangular.module(\"shico\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/shico/parameterIO.template.html\",\"<div class=\\\"row\\\"><div class=\\\"col-md-2\\\"><button ng-click=\\\"vm.getParameters()\\\" class=\\\"btn btn-success\\\">Save parameters</button></div><div class=\\\"col-md-2\\\"><button ng-click=\\\"vm.setParameters()\\\" class=\\\"btn btn-success\\\">Load parameters</button></div></div><br><div class=\\\"row\\\" ng-hide=\\\"vm.hide\\\"><div class=\\\"col-md-8\\\"><textarea class=\\\"form-control\\\" rows=\\\"2\\\" ng-readonly=\\\"vm.readOnly\\\" ng-model=\\\"vm.text\\\"></textarea></div><div class=\\\"col-md-2\\\"><button ng-click=\\\"vm.closeParamIO()\\\" class=\\\"btn btn-success\\\">{{ vm.btnText }}</button></div></div>\");\n$templateCache.put(\"app/components/shico/trackerGraphs.template.html\",\"<div class=\\\"row\\\" ng-if=\\\"vm.forceGraph.data.length != 0\\\"><uib-tabset active=\\\"active\\\"><uib-tab index=\\\"0\\\" heading=\\\"Stream graph\\\"><div class=\\\"row col-md-12\\\"><nvd3 data=\\\"vm.streamGraph.data\\\" options=\\\"vm.streamGraph.options\\\"></nvd3></div></uib-tab><uib-tab index=\\\"1\\\" heading=\\\"Network graphs\\\"><div class=\\\"row col-md-12\\\"><div class=\\\"col-md-4\\\" ng-repeat=\\\"(yearIdx,yearData) in vm.forceGraph.data\\\" ng-if=\\\"vm.yearsInSight(yearIdx)\\\"><span class=\\\"badge\\\">{{ vm.getYearLabel(yearIdx) }}</span><nvd3 data=\\\"yearData\\\" options=\\\"vm.forceGraph.options\\\" on-ready=\\\"vm.addBorder\\\"></nvd3></div><rzslider ng-hide=\\\"!vm.slider_options.ceil\\\" rz-slider-model=\\\"vm.forceGraph.currYearIdx\\\" rz-slider-options=\\\"vm.slider_options\\\"></rzslider></div></uib-tab><uib-tab index=\\\"2\\\" heading=\\\"Space embedding\\\"><div class=\\\"row col-md-12\\\"><nvd3 data=\\\"vm.scatterGraph.data[vm.forceGraph.currYearIdx]\\\" options=\\\"vm.scatterGraph.options\\\"></nvd3><rzslider ng-hide=\\\"!vm.slider_options.ceil\\\" rz-slider-model=\\\"vm.forceGraph.currYearIdx\\\" rz-slider-options=\\\"vm.slider_options\\\"></rzslider></div></uib-tab><uib-tab index=\\\"3\\\" heading=\\\"Plain text vocabulary\\\"><div class=\\\"row col-md-12\\\"><div class=\\\"row\\\"><div class=\\\"col-md-2\\\"><h4>Model for years</h4></div><div class=\\\"col-md-10\\\"><div class=\\\"col-md-2\\\"><h4>Seed word</h4></div><div class=\\\"col-md-8\\\"><h4>Vocabulary</h4></div></div></div><div class=\\\"row\\\" ng-repeat=\\\"(year, yLinks) in vm.vocabularies.data\\\"><hr><div class=\\\"col-md-2\\\"><strong>{{ year }}</strong></div><div class=\\\"col-md-10\\\"><div ng-repeat=\\\"(seed, terms) in yLinks\\\"><div class=\\\"col-md-4\\\"><strong>{{ seed }}</strong></div><div class=\\\"col-md-8\\\"><span ng-repeat=\\\"term in terms\\\">{{ term[0] }} &nbsp;</span>&nbsp;</div></div></div></div></div></uib-tab></uib-tabset><div class=\\\"row col-md-12 pager\\\"><button class=\\\"btn btn-success\\\" ng-csv=\\\"vm.downloadData()\\\" filename=\\\"test.csv\\\">Save data</button></div></div>\");\n$templateCache.put(\"app/components/shico/trackerParameters.template.html\",\"<div class=\\\"row form-horizontal col-md-12\\\"><p class=\\\"lead\\\" uib-popover-html=\\\"vm.tooltips[\\'seedConcept\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\">Concept search</p><div class=\\\"form-group col-md-11\\\"><input type=\\\"text\\\" ng-model=\\\"vm.parameters.terms\\\" class=\\\"form-control\\\" id=\\\"terms\\\" placeholder=\\\"Search concepts\\\"></div><div class=\\\"form-group col-md-1\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toggleOpen()\\\">+</button></div><div uib-collapse=\\\"!vm.isOpen\\\" class=\\\"col-md-12\\\"><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'maxTerms\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"maxConcepts\\\">Max terms</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.maxTerms\\\" min=\\\"1\\\" max=\\\"20\\\" class=\\\"form-control\\\" id=\\\"maxConcepts\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'maxRelatedTerms\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"maxRelatedTerms\\\">Max related terms</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.maxRelatedTerms\\\" min=\\\"1\\\" max=\\\"20\\\" class=\\\"form-control\\\" id=\\\"maxRelatedTerms\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'minSim\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"minSim\\\">Minimum concept similarity</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.minSim\\\" min=\\\"0.1\\\" max=\\\"10.0\\\" step=\\\"0.1\\\" class=\\\"form-control\\\" id=\\\"minSim\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'wordBoost\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"wordBoost\\\">Word boost</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.wordBoost\\\" min=\\\"0.1\\\" max=\\\"10.0\\\" step=\\\"0.1\\\" class=\\\"form-control\\\" id=\\\"wordBoost\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'boostMethod\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"boostMethod\\\">Boost method</label><select ng-model=\\\"vm.parameters.boostMethod\\\" name=\\\"boostMethod\\\" class=\\\"form-control\\\"><option data-ng-repeat=\\\"method in vm.boostMethods\\\" value=\\\"{{ method }}\\\">{{ method }}</option></select></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'algorithm\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"algorithm\\\">Algorithm</label><select ng-model=\\\"vm.parameters.algorithm\\\" name=\\\"algorithm\\\" class=\\\"form-control\\\"><option data-ng-repeat=\\\"algo in vm.algorithms\\\" value=\\\"{{ algo }}\\\">{{ algo }}</option></select></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'direction\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"forward\\\">Track direction</label><select ng-model=\\\"vm.parameters.forwards\\\" name=\\\"forward\\\" class=\\\"form-control\\\"><option data-ng-repeat=\\\"dir in vm.directions\\\" value=\\\"{{ dir }}\\\">{{ dir }}</option></select></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'yearsInInterval\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"yearsInterval\\\">Years in interval</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.aggYearsInInterval\\\" min=\\\"1\\\" max=\\\"10\\\" step=\\\"1\\\" class=\\\"form-control\\\" id=\\\"yearsInterval\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'wordsPerYear\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"wordsPerYear\\\">Words per year</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.aggWordsPerYear\\\" min=\\\"1\\\" max=\\\"100\\\" step=\\\"1\\\" class=\\\"form-control\\\" id=\\\"wordsPerYear\\\"></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'weighFunc\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"aggWeighFunc\\\">Weighing function</label><select ng-model=\\\"vm.parameters.aggWeighFunction\\\" name=\\\"aggWeighFunc\\\" class=\\\"form-control\\\"><option data-ng-repeat=\\\"wFunc in vm.weighFuncs\\\" value=\\\"{{ wFunc }}\\\">{{ wFunc }}</option></select></div><div class=\\\"form-group form-inline col-md-4\\\"><label uib-popover-html=\\\"vm.tooltips[\\'wFParam\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"aggWFParam\\\">Function shape</label> <input type=\\\"number\\\" ng-model=\\\"vm.parameters.aggWFParam\\\" min=\\\"1\\\" max=\\\"10\\\" step=\\\"0.1\\\" class=\\\"form-control\\\" id=\\\"aggWFParam\\\"></div><div class=\\\"form-group form-inline col-md-4\\\" ng-if=\\\"vm.features.canClean\\\"><label uib-popover-html=\\\"vm.tooltips[\\'doCleaning\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"doCleaning\\\">Do cleaning ?</label><select ng-model=\\\"vm.parameters.doCleaning\\\" name=\\\"doCleaning\\\" class=\\\"form-control\\\"><option data-ng-repeat=\\\"opt in vm.doCleaning\\\" value=\\\"{{ opt }}\\\">{{ opt }}</option></select></div><div class=\\\"form-group col-md-11\\\"><label uib-popover-html=\\\"vm.tooltips[\\'yearPeriod\\']\\\" popover-trigger=\\\"click\\\" popover-placement=\\\"bottom\\\" for=\\\"doCleaning\\\">Year period</label><rzslider rz-slider-model=\\\"vm.years.from\\\" rz-slider-high=\\\"vm.years.to\\\" rz-slider-options=\\\"vm.years.options\\\"></rzslider></div></div></div>\");}]);"],"sourceRoot":"/source/"}